
import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { FileText, Download, Eye } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import DashboardLayout from "@/components/layout/DashboardLayout";

// Mock report data
const reports = [
  {
    id: 1,
    title: "Monthly ECG Report",
    date: "June 1, 2025",
    doctor: "Dr. Amanda Smith",
    status: "reviewed",
    type: "monthly"
  },
  {
    id: 2,
    title: "Cardiac Evaluation",
    date: "May 15, 2025",
    doctor: "Dr. Robert Johnson",
    status: "reviewed",
    type: "evaluation"
  },
  {
    id: 3,
    title: "Weekly ECG Summary",
    date: "May 7, 2025",
    doctor: "Dr. Amanda Smith",
    status: "reviewed",
    type: "weekly"
  },
  {
    id: 4,
    title: "Monthly ECG Report",
    date: "May 1, 2025",
    doctor: "Dr. Amanda Smith",
    status: "reviewed",
    type: "monthly"
  }
];

const PatientReports = () => {
  const [activeTab, setActiveTab] = useState<"all" | "monthly" | "weekly" | "evaluation">("all");
  const { toast } = useToast();
  
  const filteredReports = activeTab === "all" 
    ? reports 
    : reports.filter(report => report.type === activeTab);
  
  const handleDownload = (reportId: number) => {
    toast({
      title: "Report Downloaded",
      description: `Report #${reportId} has been downloaded successfully.`
    });
  };
  
  return (
    <DashboardLayout userType="patient">
      <div className="space-y-6">
        <h1 className="text-3xl font-bold tracking-tight">ECG Reports</h1>
        <p className="text-muted-foreground">
          Access and download your ECG reports generated by your doctors
        </p>
        
        <Tabs 
          defaultValue="all" 
          className="w-full"
          onValueChange={(value) => setActiveTab(value as "all" | "monthly" | "weekly" | "evaluation")}
        >
          <TabsList className="grid grid-cols-4 mb-6">
            <TabsTrigger value="all">All Reports</TabsTrigger>
            <TabsTrigger value="monthly">Monthly</TabsTrigger>
            <TabsTrigger value="weekly">Weekly</TabsTrigger>
            <TabsTrigger value="evaluation">Evaluations</TabsTrigger>
          </TabsList>
          
          <TabsContent value="all" className="space-y-4">
            {renderReportsList(filteredReports, handleDownload)}
          </TabsContent>
          <TabsContent value="monthly" className="space-y-4">
            {renderReportsList(filteredReports, handleDownload)}
          </TabsContent>
          <TabsContent value="weekly" className="space-y-4">
            {renderReportsList(filteredReports, handleDownload)}
          </TabsContent>
          <TabsContent value="evaluation" className="space-y-4">
            {renderReportsList(filteredReports, handleDownload)}
          </TabsContent>
        </Tabs>
      </div>
    </DashboardLayout>
  );
};

// Helper function to render reports list
const renderReportsList = (reports: any[], handleDownload: (id: number) => void) => {
  if (reports.length === 0) {
    return (
      <Card>
        <CardContent className="flex flex-col items-center justify-center py-10">
          <FileText className="h-10 w-10 text-muted-foreground mb-4" />
          <h3 className="text-lg font-medium">No reports available</h3>
          <p className="text-sm text-muted-foreground">
            No reports found in this category
          </p>
        </CardContent>
      </Card>
    );
  }
  
  return reports.map(report => (
    <Card key={report.id}>
      <div className="flex flex-col md:flex-row">
        <div className="flex-1 p-6 border-b md:border-b-0 md:border-r">
          <div className="flex items-start justify-between">
            <div>
              <h3 className="text-lg font-medium">{report.title}</h3>
              <p className="text-sm text-muted-foreground">{report.date}</p>
            </div>
            <Badge variant={report.status === "reviewed" ? "default" : "outline"}>
              {report.status === "reviewed" ? "Reviewed" : "Pending"}
            </Badge>
          </div>
          <div className="mt-4">
            <p className="text-sm text-muted-foreground">Generated by: {report.doctor}</p>
          </div>
        </div>
        <div className="md:w-60 p-6 flex md:flex-col gap-4 items-center justify-center">
          <Button className="w-full" onClick={() => handleDownload(report.id)}>
            <Download className="mr-2 h-4 w-4" />
            Download PDF
          </Button>
          <Button variant="outline" className="w-full">
            <Eye className="mr-2 h-4 w-4" />
            Preview
          </Button>
        </div>
      </div>
    </Card>
  ));
};

export default PatientReports;
